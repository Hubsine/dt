<?php

namespace Dt\UserBundle\Tests\Security\Core\User;

use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Dt\UserBundle\Entity\User;
use Symfony\Component\Validator\Validation;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2017-05-09 at 19:57:22.
 * 
 */
class DtFOSUBUserProviderTest extends WebTestCase {

    /**
     * 
     * @assert (0, param2) == 0
     */
    public function testLoadUserByOAuthUserResponse() {

        #$kernel = $this->createKernel();
        #$kernel->boot();
        #$validator = $kernel->getContainer()->get('validator');
        $validator = Validation::createValidatorBuilder()->enableAnnotationMapping()->getValidator();

        $user = new User();
        
        // Not blank
        $errors = $validator->validate($user, null, array('test'));
        $this->assertEquals(1, $errors->count());
        
        // String is Alpha 
        $user->setFirstName('Diallo');
        $errors = $validator->validate($user, null, array('test'));
        $this->assertEquals(0, $errors->count());
        
        // Une erreur doit être retourner puisque le prénom contient des chiffres
        $user->setFirstName('Diallo123');
        $errors = $validator->validate($user, null, array('test'));
        $this->assertEquals(1, $errors->count());
        
        // Doit aussi retourner une erreur comme le précédent
        $user->setFirstName('Diallo@@&@#');
        $errors = $validator->validate($user, null, array('test'));
        $this->assertEquals(1, $errors->count());
        
    }

}
